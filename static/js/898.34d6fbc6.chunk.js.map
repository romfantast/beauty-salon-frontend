{"version":3,"file":"static/js/898.34d6fbc6.chunk.js","mappings":"wLAEaA,EAAO,SAAC,GAMd,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,OAII,IAHJC,KAAAA,OAGI,MAHG,eAGH,MAFJC,OAAAA,OAEI,MAFK,eAEL,EADJC,EACI,EADJA,GAEA,OACE,gBAAKJ,MAAOA,EAAOC,OAAQA,EAAQC,KAAMA,EAAMC,OAAQA,EAAvD,UACE,gBAAKE,KAAI,0BAAqBD,MAGnC,C,sFCXYE,EAAe,SAAC,GAAe,EAAbC,OAC7B,OACE,SAAC,KAAD,CACEC,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBV,MAAM,KACNC,OAAO,KACPU,SAAS,GAGd,C,kICdYC,EAAkB,CAC7B,CACEC,KAAM,QACNC,KAAM,gBACNC,YAAa,2CACbC,OAAQ,WAEV,CACEH,KAAM,OACNC,KAAM,WACNC,YAAa,wCACbC,OAAQ,WAEV,CACEH,KAAM,UACNC,KAAM,iBACNC,YAAa,yBACbC,OAAQ,WAEV,CACEH,KAAM,OACNC,KAAM,gBACNC,YAAa,+BACbC,OAAQ,WAEV,CACEH,KAAM,UACNC,KAAM,sBACNC,YAAa,8CACbC,OAAQ,WAEV,CACEH,KAAM,OACNC,KAAM,QACNC,YAAa,8CACbC,OAAQ,WAEV,CACEH,KAAM,SACNC,KAAM,SACNC,YAAa,GACbC,OAAQ,SACRC,SAAU,W,SCuDd,EAzFkB,WAChB,IAAMC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IACrBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gCACE,iBACEC,MAAO,CACLC,UACE,qFAEJC,UAAU,2CALZ,WAOE,gBACEF,MAAO,CAAEG,aAAc,OACvBD,UAAU,YACVE,IAAI,0EACJC,IAAI,YAEN,iBAAKH,UAAU,OAAf,WACE,iBAAKA,UAAU,2CAAf,WACE,cAAGA,UAAU,oBAAb,SAAiC,cACjC,mBAAQA,UAAU,kBAAlB,SAAoC,aAEtC,iBAAKA,UAAU,oDAAf,WACE,uBAAG,qBACH,gBACEI,MAAM,6BACN/B,MAAM,IACNC,OAAO,IACP+B,QAAQ,UACR9B,KAAK,OALP,UAOE,mBAAQ+B,GAAG,UAAUC,GAAG,UAAUC,EAAE,IAAIjC,KAAK,eAE/C,uBAAG,gCAIT,0BACE,gBAAKyB,UAAU,MAAf,UACE,eAAIA,UAAU,eAAd,SACGf,EAAgBwB,KAAI,SAAAC,GAAI,OACvB,yBACE,iBAAKV,UAAU,2BAAf,WACE,SAAC5B,EAAA,EAAD,CACEC,MAAM,KACNC,OAAO,KACPG,GAAIiC,EAAKxB,KACTX,KAAK,cACLC,OAAO,WAET,4BACE,cACEwB,UAAS,sCACS,WAAhBU,EAAKrB,OACD,8BACA,IAJR,SAOGqB,EAAKvB,QAER,cAAGa,UAAU,mCAAb,SACGU,EAAKtB,qBApBLsB,EAAKxB,KADS,UA8B9BK,IACC,gBAAKS,UAAU,OAAf,UACE,mBACEA,UAAU,4IACVW,KAAK,SACLC,SAAUlB,EACVmB,QAAS,kBAAMjB,EAASkB,EAAAA,GAAAA,SAAf,EAJX,SAMGpB,GAAY,SAACf,EAAA,EAAD,IAAmB,eAM3C,C","sources":["components/Icon/Icon.jsx","components/Loader/ButtonLoader.jsx","helpers/profileSettings.js","pages/MyProfile/MyProfile.jsx"],"sourcesContent":["import React from 'react';\n\nexport const Icon = ({\n  width,\n  height,\n  fill = 'currentColor',\n  stroke = 'currentColor',\n  id,\n}) => {\n  return (\n    <svg width={width} height={height} fill={fill} stroke={stroke}>\n      <use href={`sprite.svg#icon-${id}`}></use>\n    </svg>\n  );\n};\n","import React from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\n\nexport const ButtonLoader = ({ styles }) => {\n  return (\n    <RotatingLines\n      strokeColor=\"grey\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"24\"\n      height=\"24\"\n      visible={true}\n    />\n  );\n};\n","export const profileSettings = [\n  {\n    icon: 'heart',\n    text: 'Your favorite',\n    description: 'Reorder your favorite service in a click',\n    option: 'regular',\n  },\n  {\n    icon: 'card',\n    text: 'Payments',\n    description: 'Payment methods, Transaction History ',\n    option: 'regular',\n  },\n  {\n    icon: 'address',\n    text: 'Manage Address',\n    description: 'Edit your home address',\n    option: 'regular',\n  },\n  {\n    icon: 'bell',\n    text: 'Notifications',\n    description: 'View your past notifications',\n    option: 'regular',\n  },\n  {\n    icon: 'partner',\n    text: 'Register as partner',\n    description: 'Want to list your service? Register with us',\n    option: 'regular',\n  },\n  {\n    icon: 'info',\n    text: 'About',\n    description: 'Privacy Policy, Terms of Services, Licenses',\n    option: 'regular',\n  },\n  {\n    icon: 'logout',\n    text: 'LogOut',\n    description: '',\n    option: 'accent',\n    function: 'logout',\n  },\n];\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsAuth, selectIsLoading } from 'redux/auth/auth-selectors';\nimport { ButtonLoader } from 'components/Loader/ButtonLoader';\nimport authOperations from 'redux/auth/auth-operations';\nimport { Icon } from 'components/Icon/Icon';\nimport { profileSettings } from 'helpers/profileSettings';\n\nconst MyProfile = () => {\n  const isAuth = useSelector(selectIsAuth);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  return (\n    <section>\n      <div\n        style={{\n          boxShadow:\n            '0px 0.5px 2px 0px rgba(96, 97, 112, 0.16), 0px 0px 1px 0px rgba(40, 41, 61, 0.08)',\n        }}\n        className=\"flex gap-x-2 items-center px-6 pt-6 pb-5\"\n      >\n        <img\n          style={{ borderRadius: '50%' }}\n          className=\"w-16 h-16\"\n          src=\"https://i.pinimg.com/236x/4b/da/b5/4bdab596617446d1e7b9fdcb3e8d71f2.jpg\"\n          alt=\"avatar\"\n        />\n        <div className=\"grow\">\n          <div className=\"w-full flex justify-between items-center\">\n            <p className=\"text-lg font-bold\">Anna Doe</p>\n            <button className=\"text-indigo-500\">Edit</button>\n          </div>\n          <div className=\"flex items-center  gap-x-1 text-slate-500 text-xs\">\n            <p>+1 - 4842989351</p>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"5\"\n              height=\"5\"\n              viewBox=\"0 0 5 5\"\n              fill=\"none\"\n            >\n              <circle cx=\"2.22925\" cy=\"2.84033\" r=\"2\" fill=\"#F2F2F5\" />\n            </svg>\n            <p>johndoe@gmail.com</p>\n          </div>\n        </div>\n      </div>\n      <div>\n        <div className=\"p-6\">\n          <ul className=\"grid gap-y-8\">\n            {profileSettings.map(item => (\n              <li key={item.icon}>\n                <div className=\"flex items-start gap-x-4\">\n                  <Icon\n                    width=\"24\"\n                    height=\"24\"\n                    id={item.icon}\n                    fill=\"transparent\"\n                    stroke=\"black\"\n                  />\n                  <div>\n                    <p\n                      className={`leading-4 text-sm font-bold ${\n                        item.option === 'accent'\n                          ? 'text-red-500 cursor-pointer'\n                          : ''\n                      }`}\n                    >\n                      {item.text}\n                    </p>\n                    <p className=\"leading-4 text-xs text-slate-500\">\n                      {item.description}\n                    </p>\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      {isAuth && (\n        <div className=\"px-6\">\n          <button\n            className=\"flex justify-center w-full bg-indigo-500 text-slate-50 font-bold text-base p-4 rounded-lg disabled:bg-slate-300 disabled:text-neutral-600\"\n            type=\"submit\"\n            disabled={isLoading}\n            onClick={() => dispatch(authOperations.logout())}\n          >\n            {isLoading ? <ButtonLoader /> : 'Logout'}\n          </button>\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default MyProfile;\n"],"names":["Icon","width","height","fill","stroke","id","href","ButtonLoader","styles","strokeColor","strokeWidth","animationDuration","visible","profileSettings","icon","text","description","option","function","isAuth","useSelector","selectIsAuth","isLoading","selectIsLoading","dispatch","useDispatch","style","boxShadow","className","borderRadius","src","alt","xmlns","viewBox","cx","cy","r","map","item","type","disabled","onClick","authOperations"],"sourceRoot":""}